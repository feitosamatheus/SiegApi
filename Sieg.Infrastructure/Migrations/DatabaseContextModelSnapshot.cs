// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sieg.Infrastructure.Contexts;

#nullable disable

namespace Sieg.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sieg.Domain.Entities.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaminhoXml")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTimeOffset?>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCriacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DataExclusao")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("NomeOriginalArquivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Processado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<long>("Tamanho")
                        .HasColumnType("bigint");

                    b.Property<string>("XmlHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("XmlHash")
                        .IsUnique()
                        .HasDatabaseName("UX_Documento_XmlHash")
                        .HasFilter("[Excluido] = 0");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("Sieg.Domain.Entities.DocumentoFiscal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CnpjEmitente")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("CnpjEmitente");

                    b.Property<DateTimeOffset?>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCriacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataEmissao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DataExclusao")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DocumentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("int");

                    b.Property<string>("UfEmitente")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("UfEmitente");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DataEmissao")
                        .HasDatabaseName("IX_DocFiscal_DataEmissao");

                    b.HasIndex("DocumentoId");

                    b.HasIndex("CnpjEmitente", "DataEmissao")
                        .HasDatabaseName("IX_DocFiscal_Cnpj_DataEmissao");

                    b.HasIndex("UfEmitente", "DataEmissao")
                        .HasDatabaseName("IX_DocFiscal_Uf_DataEmissao");

                    b.ToTable("DocumentosFiscais");
                });

            modelBuilder.Entity("Sieg.Domain.Entities.DocumentoFiscal", b =>
                {
                    b.HasOne("Sieg.Domain.Entities.Documento", "Documento")
                        .WithMany("DocumentosFiscais")
                        .HasForeignKey("DocumentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Documento");
                });

            modelBuilder.Entity("Sieg.Domain.Entities.Documento", b =>
                {
                    b.Navigation("DocumentosFiscais");
                });
#pragma warning restore 612, 618
        }
    }
}
